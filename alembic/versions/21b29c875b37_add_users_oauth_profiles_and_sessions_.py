"""Add users, oauth_profiles, and sessions tables

Revision ID: 21b29c875b37
Revises: 
Create Date: 2025-05-17 22:13:44.188153

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '21b29c875b37'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('role', postgresql.ENUM('ADMIN', 'USER', name='role'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index('ix_users_email_lower', 'users', [sa.literal_column('lower(email)')], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index('ix_users_username_lower', 'users', [sa.literal_column('lower(username)')], unique=False)
    op.create_table('oauth_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', postgresql.ENUM('GOOGLE', 'MICROSOFT', 'FACEBOOK', name='provider'), nullable=False),
    sa.Column('provider_user_id', sa.String(), nullable=False),
    sa.Column('access_token', postgresql.BYTEA(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_oauth_profiles_provider_user_id', 'oauth_profiles', ['provider', 'provider_user_id'], unique=True)
    op.create_index(op.f('ix_oauth_profiles_user_id'), 'oauth_profiles', ['user_id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('refresh_token_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_jti'), 'sessions', ['jti'], unique=True)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_index('ix_sessions_user_id_expires_at', 'sessions', ['user_id', 'expires_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_sessions_user_id_expires_at', table_name='sessions')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_jti'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_oauth_profiles_user_id'), table_name='oauth_profiles')
    op.drop_index('ix_oauth_profiles_provider_user_id', table_name='oauth_profiles')
    op.drop_table('oauth_profiles')
    op.drop_index('ix_users_username_lower', table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index('ix_users_email_lower', table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
