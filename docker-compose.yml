# Docker Compose configuration for Cedrina development and testing
# Includes local PostgreSQL and Redis services

services:
  app:
    image: cedrina:development
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - APP_ENV=development
      - PYTHONPATH=/app:/app/src
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    volumes:
      - ./src:/app/src:rw  # Read-write for hot reloading
      - ./locales:/app/locales:ro
      - ./alembic.ini:/app/alembic.ini:ro
      - ./alembic:/app/alembic:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8000/api/v1/health && psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1 FROM alembic_version'"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s  # Extended for database initialization and migrations
    networks:
      - cedrina-network

  postgres:
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}", "-d", "${POSTGRES_DB:-cedrina_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s  # Extended for init-db.sh
    networks:
      - cedrina-network

  redis:
    image: redis:7
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - cedrina-network

networks:
  cedrina-network:
    driver: bridge
    name: cedrina-network

volumes:
  postgres_data:
    name: cedrina_postgres_data
  redis_data:
    name: cedrina_redis_data