version: '3.9'
services:
  api:
    build:
      context: .
      target: builder
    volumes:
      - ./src:/app/src
      - ./locales:/app/locales
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
      - ./.env:/app/.env
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=${APP_ENV:-development}
      - PYTHONPATH=/app
      - ENABLE_LOCAL_POSTGRES=${ENABLE_LOCAL_POSTGRES:-false}
      - ENABLE_LOCAL_REDIS=${ENABLE_LOCAL_REDIS:-false}
    command: bash -c "pybabel compile -d locales -D messages && uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      postgres:
        condition: service_healthy
        required: false
      redis:
        condition: service_healthy
        required: false
    networks:
      - cedrina-network

  postgres:
    image: postgres:16
    profiles:
      - postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - cedrina_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - cedrina-network

  redis:
    image: redis:7.2
    profiles:
      - redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - cedrina_redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    networks:
      - cedrina-network

volumes:
  cedrina_postgres_data:
    name: cedrina_postgres_data
    driver: local
    driver_opts:
      type: none
      device: ${POSTGRES_DATA_PATH:-./data/postgres}
      o: bind
  cedrina_redis_data:
    name: cedrina_redis_data
    driver: local
    driver_opts:
      type: none
      device: ${REDIS_DATA_PATH:-./data/redis}
      o: bind

networks:
  cedrina-network:
    driver: bridge